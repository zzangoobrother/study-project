server:
  port: 8090
  id: ${server.id}

spring:
  data:
    redis:
      cluster:
        nodes:
          - localhost:6380
          - localhost:6381
          - localhost:6382
          - localhost:6383
          - localhost:6384
          - localhost:6385
      repositories:
        enabled: false

  kafka:
    bootstrap-servers: localhost:19094,localhost:19095,localhost:19096
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        delivery.timeout.ms: 10000
        request.timeout.ms: 3000
        retry.backoff.ms: 100

    consumer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        allow.auth.create.topics: false
        enable.auto.commit: false
        partition.assignment.strategy: org.apache.kafka.clients.consumer.CooperativeStickyAssignor
      auto-offset-reset: latest

message-system:
  kafka:
    topics:
      message: message-relay
      request: message-request
      push: push-notification
    listeners:
      listen:
        prefix-topic: connection-notification
        prefix-group-id: listen-group
        concurrency: 3
